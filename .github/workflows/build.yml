name: Build Keenetic Huawei Integration Package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            build-essential git python3 attr bc curl gawk \
            libhtml-parser-perl libjson-perl libncurses-dev libssl-dev \
            libxml-libxml-perl subversion unzip zlib1g-dev make gcc lzip \
            gperf protobuf-c-compiler flex bison util-linux

      - name: Set up Keenetic SDK
        run: |
          git clone --depth 1 --branch 4.03 https://github.com/keenetic/keenetic-sdk.git
          mkdir -p keenetic-sdk/package/huawei-integration
          # Копируем содержимое репозитория в папку пакета
          find . -maxdepth 1 -not -path "./keenetic-sdk" -not -path . -not -path "./.git" \
            -exec cp -r {} keenetic-sdk/package/huawei-integration/ \;
          cd keenetic-sdk
          echo "Listing available devices..."
          ./configure.sh -l
          echo "Running configure.sh for KN-2311..."
          ./configure.sh KN-2311 || ./configure.sh -p all
          if [ ! -f .config ]; then
            echo ".config file not created!"
            exit 1
          fi
          echo ".config file created successfully"

      - name: Prepare host tools for SDK
        run: |
          cd keenetic-sdk
          mkdir -p staging_dir/host/bin
          for tool in sed flock cp mkdir chmod; do
            ln -sf /usr/bin/$tool staging_dir/host/bin/$tool || ln -sf /bin/$tool staging_dir/host/bin/$tool
          done

      - name: Build OPKG package
        run: |
          cd keenetic-sdk
          echo "[*] Synchronizing .config..."
          make defconfig
          echo "[*] Cleaning huawei-integration package..."
          make package/huawei-integration/clean || true
          echo "[*] Compiling huawei-integration package..."
          make package/huawei-integration/compile V=s

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: huawei-integration
          path: keenetic-sdk/bin/packages/mipsel/huawei-integration_1.0-1_mipsel.ipk

      - name: Create Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        with:
          files: keenetic-sdk/bin/packages/mipsel/huawei-integration_1.0-1_mipsel.ipk
          tag_name: v1.0.${{ github.run_number }}
          name: Release v1.0.${{ github.run_number }}
          body: |
            Auto-generated release for Huawei Integration OPKG package.
            Download `huawei-integration_1.0-1_mipsel.ipk` for Keenetic routers to integrate with Huawei routers.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
